{{- range $index, $app := tuple "enketo" "kobocat" "kpi" }}
  {{- add $index 1 }}. Get the {{ $app }} application URL by running these commands:
  {{- if get ( get ( index $.Values $app ) "ingress" ) "enabled" }}
    {{- range $host := get ( get ( index $.Values $app ) "ingress" ) "hosts" }}
      {{- range .paths }}
      http{{ if ( get ( get ( index $.Values $app ) "ingress" ) "hosts" ) }}s{{ end }}://{{ $host.host }}{{ $.path }}
      {{- end }}
    {{- end }}
    {{- else if contains "NodePort" ( get ( get ( index $.Values $app ) "service" ) "type" ) }}
    export NODE_PORT=$(kubectl get --namespace {{ $.Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "kobo.fullname" $ }})
    export NODE_IP=$(kubectl get nodes --namespace {{ $.Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
    echo http://$NODE_IP:$NODE_PORT
  {{- else if contains "LoadBalancer" ( get ( get ( index $.Values $app ) "service" ) "type" ) }}
      NOTE: It may take a few minutes for the LoadBalancer IP to be available.
            You can watch the status of by running 'kubectl get --namespace {{ $.Release.Namespace }} svc -w {{ include "kobo.fullname" $ }}'
    export SERVICE_IP=$(kubectl get svc --namespace {{ $.Release.Namespace }} {{ include "kobo.fullname" $ }} --template "{{"{{ range (index $.status.loadBalancer.ingress 0) }}{{$}}{{ end }}"}}")
    echo http://$SERVICE_IP:{{ get ( get ( index $.Values $app ) "service" ) "port" }}
  {{- else if contains "ClusterIP" ( get ( get ( index $.Values $app ) "service" ) "type" ) }}
    export POD_NAME=$(kubectl get pods --namespace {{ $.Release.Namespace }} -l "app.kubernetes.io/name={{ include "kobo.name" $ }},app.kubernetes.io/instance={{ $.Release.Name }},app.kubernetes.io/component={{ $app }}" -o jsonpath="{.items[0].metadata.name}")
    export CONTAINER_PORT=$(kubectl get pod --namespace {{ $.Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
    echo "Visit http://127.0.0.1:8080 to use your application"
    kubectl --namespace {{ $.Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
  {{- end }}

{{ end }}