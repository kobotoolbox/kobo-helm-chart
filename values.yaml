# Shared, provide your own values here
global:
  # Timeout in seconds for both NGINX proxy timeouts and uWSGI harakiri
  timeout: 120
kobotoolbox:
  djangoSecret: "change_me_please"
  mongoName: "formhub"
  # mongoDatabase: "mongodb://root:password@mongodb:27017"
  # kobocatDatabase: "postgis://postgres:password@postgres-postgresql:5432/postgres"
  # Set to use for all redis needs (cache, broker, etc) redis connection string without db number.
  # Unset to specify each redis usage seperately
  # Redis default DB numbers
  # - Enketo - 0 (cannot be changed)
  # - Session - 1
  # - KPI Broker - 2
  # - Kobocat Broker - 3
  # - KPI Cache - 4
  # - Kobocat Cache - 5
  # - Service account - 6
  #redis: "redis://:pass@redis-master:6379"  # Do not add / nor /1 suffix
  redisParameters: "" # ?ssl_cert_reqs=CERT_REQUIRED
  #redisSession: "redis://:pass@redis-master:6379/1"
  #serviceAccountBackend: "redis://:pass@redis-master:6379/6"
  enketoApiKey: "change_me_please"

# Actually post-install and pre-update
migrationJob:
  enabled: true
  activeDeadlineSeconds: 600

postInstall: {}
  # command: "./manage.py anything"
  # activeDeadlineSeconds: 60

kpi:
  image:
    repository: kobotoolbox/kpi
    pullPolicy: IfNotPresent
    tag: "2.025.02f"
  replicaCount: 1
  resources:
    limits:
      cpu: 1000m
      memory: 1100Mi
    requests:
      cpu: 100m
      memory: 900Mi
  autoscaling:
    enabled: false
    minReplicas: 2
    maxReplicas: 20
    targetCPU: 80
    targetMemory: 90
  # strategy:
  #   type: RollingUpdate
  #   rollingUpdate:
  #      maxSurge: "25%""
  #      maxUnavailable: "25%"
  # nginx:
  #   config: |-
  #     server {
  #       listen       80;
  #        server_name  example.com;
  #     }
  nodeSelector: {}
  tolerations: []
  podAnnotations: {}
  affinity: {}
  service:
    type: ClusterIP
    port: 80
  budget:
    minAvailable: 1
  env:
    normal:
      # By default, the following are set but can be overridden
      ENKETO_EXPRESS_PUBLIC_SUBDOMAIN: "ee"
      KOBOCAT_PUBLIC_SUBDOMAIN: "kc"
      KOBOFORM_PUBLIC_SUBDOMAIN: "kobo"
      PUBLIC_REQUEST_SCHEME: "https"
      # Celery configuration
      CELERY_WORKER_AUTOSCALE: "2,3"
      CELERY_WORKER_MAX_TASKS_PER_CHILD: "10000"
      # -- Django email backend
      EMAIL_BACKEND: "django.core.mail.backends.console.EmailBackend"
      # -- Django file storage, recommend using a django-storages approach for scalability
      # KPI_DEFAULT_FILE_STORAGE: "storages.backends.s3boto3.S3Boto3Storage"
      # -- Set s3 bucket name is relevant
      # KPI_AWS_STORAGE_BUCKET_NAME: ""
      # -- KoBoCAT Django file storage, should match KPI setting
      # KOBOCAT_DEFAULT_FILE_STORAGE: "storages.backends.s3boto3.S3Boto3Storage"
      # -- KoBoCAT Bucket name
      # KOBOCAT_AWS_STORAGE_BUCKET_NAME: ""
    secret:
      {}
      # DATABASE_URL: "postgres://postgres:password@postgres-postgresql:5432/postgres"
      # CELERY_BROKER_URL: "redis://localhost:6379/2"
      # CACHE_URL: "redis://localhost:6379/4"
      # AWS_ACCESS_KEY_ID: ""
      # AWS_SECRET_ACCESS_KEY: ""
  extraVolumeMounts: []
  extraVolumes: []
  worker:
    replicaCount: 1
    livenessProbe:
      initialDelaySeconds: 10
      periodSeconds: 60
      timeoutSeconds: 30
      exec:
        command:
          - "bash"
          - "-c"
          - "celery -A kobo inspect ping -d kpi_main_worker@$HOSTNAME | grep -q OK"
    resources:
      limits:
        cpu: 2000m
        memory: 1400Mi
      requests:
        cpu: 400m
        memory: 700Mi
    autoscaling:
      enabled: true
      minReplicas: 1
      maxReplicas: 20
      targetCPU: 90
      # targetMemory: 80
  workerLowPriority:
    replicaCount: 1
    livenessProbe:
      initialDelaySeconds: 10
      periodSeconds: 60
      timeoutSeconds: 30
      exec:
        command:
          - "bash"
          - "-c"
          - "celery -A kobo inspect ping -d kpi_main_worker@$HOSTNAME | grep -q OK"
    resources:
      limits:
        cpu: 1000m
        memory: 800Mi
      requests:
        cpu: 300m
        memory: 280Mi
    autoscaling:
      enabled: true
      minReplicas: 2
      maxReplicas: 20
      targetCPU: 80
      # targetMemory: 80
  beat:
    resources:
      limits:
        cpu: 800m
        memory: 400Mi
      requests:
        cpu: 50m
        memory: 200Mi
  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

kobocat:
  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local


flower:
  enabled: false
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 50m
      memory: 256Mi
  nodeSelector: {}
  tolerations: []
  podAnnotations: {}
  affinity: {}
  service:
    type: ClusterIP
    port: 80


enketo:
  image:
    repository: kobotoolbox/enketo-express-extra-widgets
    pullPolicy: IfNotPresent
    tag: "7.3.1"
  replicaCount: 1
  resources:
    limits:
      cpu: 1000m
      memory: 512Mi
    requests:
      cpu: 500m
      memory: 256Mi
  autoscaling:
    enabled: false
    minReplicas: 2
    maxReplicas: 20
    targetCPU: 80
    # targetMemory: 90
  # strategy:
  #   type: RollingUpdate
  #   rollingUpdate:
  #      maxSurge: "25%""
  #      maxUnavailable: "25%"
  nodeSelector: {}
  tolerations: []
  affinity: {}
  service:
    type: ClusterIP
    port: 80
  budget:
    minAvailable: 1
  env:
    normal:
      ENKETO_APP_NAME: "Enketo Express for KoboToolbox"
      ENKETO_MAX_PROCESSES: "4"
      ENKETO_LINKED_FORM_AND_DATA_SERVER_NAME: "KoboToolbox"
      ENKETO_LINKED_FORM_AND_DATA_SERVER_ALLOW_INSECURE_TRANSPORT: "true"
      ENKETO_LINKED_FORM_AND_DATA_SERVER_SERVER_URL: ""
      # -- Maps settings. It is an array, see https://github.com/enketo/enketo-express/blob/master/config/sample.env#L16-L19
      ENKETO_MAPS_0_NAME: humanitarian
      ENKETO_MAPS_0_TILES_0: "https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png"
      ENKETO_MAPS_0_ATTRIBUTION: "&copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> & <a href=\"https://www.hotosm.org/updates/2013-09-29_a_new_window_on_openstreetmap_data\">Yohan Boniface & Humanitarian OpenStreetMap Team</a> | <a href=\"https://www.openstreetmap.org/copyright\">Terms</a>"
      ENKETO_MAPS_1_NAME: satellite
      ENKETO_MAPS_1_TILES_0: "https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}"
      ENKETO_MAPS_1_ATTRIBUTION: "Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community"
      ENKETO_MAPS_2_NAME: terrain
      ENKETO_MAPS_2_TILES_0: "https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png"
      ENKETO_MAPS_2_ATTRIBUTION: "&copy; <a href=\"https://openstreetmap.org\">OpenStreetMap</a> | <a href=\"https://www.openstreetmap.org/copyright\">Terms</a>"
      ENKETO_MAPS_3_NAME: streets
      ENKETO_MAPS_3_TILES_0: "https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"
      ENKETO_MAPS_3_ATTRIBUTION: "&copy; <a href=\"https://openstreetmap.org\">OpenStreetMap</a> | <a href=\"https://www.openstreetmap.org/copyright\">Terms</a>"
      # -- Payload limit
      ENKETO_PAYLOAD_LIMIT: 10mb
      # -- Text field character limit
      ENKETO_TEXT_FIELD_CHARACTER_LIMIT: "1000000"
      # -- Widgets list. It is an array.
      ENKETO_WIDGETS_0: note
      ENKETO_WIDGETS_1: select-desktop
      ENKETO_WIDGETS_2: select-mobile
      ENKETO_WIDGETS_3: autocomplete
      ENKETO_WIDGETS_4: geo
      ENKETO_WIDGETS_5: textarea
      ENKETO_WIDGETS_6: url
      ENKETO_WIDGETS_7: table
      ENKETO_WIDGETS_8: radio
      ENKETO_WIDGETS_9: date
      ENKETO_WIDGETS_10: time
      ENKETO_WIDGETS_11: datetime
      ENKETO_WIDGETS_12: select-media
      ENKETO_WIDGETS_13: file
      ENKETO_WIDGETS_14: draw
      ENKETO_WIDGETS_15: rank
      ENKETO_WIDGETS_16: likert
      ENKETO_WIDGETS_17: range
      ENKETO_WIDGETS_18: columns
      ENKETO_WIDGETS_19: image-view
      ENKETO_WIDGETS_20: comment
      ENKETO_WIDGETS_21: image-map
      ENKETO_WIDGETS_22: date-native
      ENKETO_WIDGETS_23: date-native-ios
      ENKETO_WIDGETS_24: date-mobile
      ENKETO_WIDGETS_25: text-max
      ENKETO_WIDGETS_26: text-print
      ENKETO_WIDGETS_27: rating
      ENKETO_WIDGETS_28: thousands-sep
      ENKETO_WIDGETS_29: integer
      ENKETO_WIDGETS_30: decimal
      ENKETO_WIDGETS_31: "../../../node_modules/enketo-image-customization-widget/image-customization"
      ENKETO_WIDGETS_32: "../../../node_modules/enketo-literacy-test-widget/literacywidget"
    secret:
      {}
      # Set if kobotoolbox.redis is unset
      # ENKETO_REDIS_MAIN_URL: "redis://localhost:6379"
      # ENKETO_REDIS_CACHE_URL: "redis://localhost:6379"
  extraVolumeMounts: [ ]
  extraVolumes: [ ]
  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

nginx:
  image: nginx:1.27

# Chart managed mongodb uses replicaset (by default) to enable high availility
# Kobotoolbox does not have automatic retry logic when the mongodb master changes
# These errors should be rare and brief, minimally acceptable for production.
mongodb:
  enabled: false
  architecture: "replicaset"
  pdb:
    create: true
  initdbScripts:
    init_01_add_index.js: |
      db = db.getSiblingDB("formhub");
      db.instances.createIndex( { _userform_id: 1 } );
      db.instances.createIndex( { _userform_id: 1, _id: -1 } );
  persistence:
    size: 40Gi
  auth:
    rootPassword: "change_me_please"
    usernames:
      - "mongo"
    passwords:
      - "change_me_please"
    databases:
      - "formhub"
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 100m
      memory: 512Mi

# Chart managed redis is intended for testing only
redis:
  enabled: false
  auth:
    password: "change_me_please"
  commonConfiguration: |-
    maxmemory 900mb
    maxmemory-policy volatile-lru
  master:
    persistence:
      size: 10Gi
    resources:
      limits:
        cpu: 1000m
        memory: 1Gi
      requests:
        cpu: 100m
        memory: 512Mi
  replica:
    persistence:
      size: 10Gi
    resources:
      limits:
        cpu: 1000m
        memory: 1Gi
      requests:
        cpu: 100m
        memory: 512Mi

# Chart managed postgresql is intended for testing only
postgresql:
  enabled: false
  auth:
    postgresPassword: "change_me_please"
  primary:
    persistence:
      size: 10Gi
    initdb:
      scripts:
        create-koboform.sql: |
          CREATE DATABASE koboform;
    resources:
      limits:
        cpu: 1000m
        memory: 1Gi
      requests:
        cpu: 100m
        memory: 512Mi

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  runAsNonRoot: true
  runAsUser: 1000
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
